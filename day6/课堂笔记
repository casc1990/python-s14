编程范式（编程的方式）

面向过程编程：
    描述：就是程序从上到下一步步执行，一步步从上到下，从头到尾的解决问题。
    缺点：就是如果你要对程序进行修改，对你修改的那部分有依赖的各个部分你都也要跟着修改，维护难度高。

面向对象：（OOP）
    描述：利用“类”和“对象”来创建各种模型来实现对真实世界的描述。对象：具体的事物
           世界万物，皆可分类，皆为对象。
           只要是对象，就肯定属于某种品类
           只要是对象，就肯定有属性（某种功能，比如手机，可以打电话）
    缺点：易于维护和扩展；提高程序开发效率；程序易读性强。

面向对象的核心特征：
    class类：（类只能被调用）
            一个类即是对一类拥有相同属性的对象的抽象、蓝图、原型。在类中定义了这些对象的都具备的属性（variables(data)）、共同的方法
    Object对象：（实例化）
            一个对象即是一个类的实例化后实例，一个类必须经过实例化后方可在程序中调用，一个类可以实例化多个对象，每个对象亦可以有不同的属性
    封装：（封装内部的属性）
            在类中对数据的赋值、内部调用对外部用户是看不到的，类里面封装着数据和方法。
    继承：（子类自动继承父类）
            一个类可以派生出子类，在这个父类里定义的属性、方法自动被子类继承
    多态：（多种形态）
            例如，公司可以看做是一个父类，技术部继承了公司这个父类，销售部也同样继承了公司的父类，技术部调用了父类的
                开始工作方法，就会执行‘开始写代码’，销售部调用了父类的开始工作方法，执行‘开始打电话’。继承了同样的方法实现不同的功能。
            简单点说:“一个接口，多种实现”，指一个基类中派生出了不同的子类，且每个子类在继承了同样的方法名的同时又对父类的方法做了不同的实现，
            这就是同一种事物表现出的多种形态。
